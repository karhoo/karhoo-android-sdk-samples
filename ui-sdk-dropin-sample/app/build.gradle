plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.karhoo.samples.uisdk.dropin"
        minSdkVersion 22
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        def secureProps = new Properties()
        if (file("secure.properties").exists()) {
            file("secure.properties")?.withInputStream { secureProps.load(it) }
        }
        resValue "string", "google_maps_api_key", (secureProps.getProperty("GOOGLE_MAPS_API_KEY_DEBUG") ?: "")
        buildConfigField("String", "BRAINTREE_GUEST_CHECKOUT_IDENTIFIER", (secureProps.getProperty("BRAINTREE_GUEST_CHECKOUT_IDENTIFIER") ?: ""))
        buildConfigField("String", "BRAINTREE_GUEST_CHECKOUT_ORGANISATION_ID", (secureProps.getProperty("BRAINTREE_GUEST_CHECKOUT_ORGANISATION_ID") ?: ""))
        buildConfigField("String", "GUEST_CHECKOUT_REFERER", (secureProps.getProperty("GUEST_CHECKOUT_REFERER") ?: ""))
        buildConfigField("String", "BRAINTREE_CLIENT_ID", (secureProps.getProperty("BRAINTREE_CLIENT_ID") ?: ""))
        buildConfigField("String", "BRAINTREE_CLIENT_SCOPE", (secureProps.getProperty("BRAINTREE_CLIENT_SCOPE") ?: ""))
        buildConfigField("String", "BRAINTREE_AUTH_TOKEN", (secureProps.getProperty("BRAINTREE_AUTH_TOKEN") ?: ""))

        buildConfigField("String", "STAGING_HOST", (secureProps.getProperty("STAGING_HOST") ?: ""))
        buildConfigField("String", "STAGING_AUTH_HOST", (secureProps.getProperty("STAGING_AUTH_HOST") ?: ""))
        buildConfigField("String", "STAGING_GUEST_HOST", (secureProps.getProperty("STAGING_GUEST_HOST") ?: ""))
    }
    flavorDimensions "default"
    productFlavors {
        farechoice {
            // Assigns this product flavor to the "version" flavor dimension.
            // If you are using only one dimension, this property is optional,
            // and the plugin automatically assigns all the module's flavors to
            // that dimension.
            dimension = "default"
            applicationIdSuffix = ".farechoice"
            versionNameSuffix = "-farechoice"
        }
        amazon {
            dimension = "default"
            applicationIdSuffix = ".amazon"
            versionNameSuffix = "-amazon"
        }
        mcdolands {
            dimension = "default"
            applicationIdSuffix = ".mcdolands"
            versionNameSuffix = "-mcdolands"
        }
        ikea {
            dimension = "default"
            applicationIdSuffix = ".ikea"
            versionNameSuffix = "-ikea"
        }
        instagram {
            dimension = "default"
            applicationIdSuffix = ".instagram"
            versionNameSuffix = "-instagram"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation 'com.github.karhoo:karhoo-android-ui-sdk:1.5.0'
    api 'com.braintreepayments.api:drop-in:5.2.1'
    implementation 'joda-time:joda-time:2.10.3'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}